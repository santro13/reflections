What happens when you initialize a repository? Why do you need to do it?

	Git repository gets created and a .git folder is now seen. This is needed to create a repository in git for the first time.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Files from working directory need to move to staging area first before they get committed to repository. This allows controlling which of the files from working directory need to be get added to repository leaving few others locally in working directory.

How can you use the staging area to make sure you have one commit per logical
change?

	I can add only those files from working directory to staging area that together form one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When one needs to try out multiple things which are not sure to go into final project, experimenting it in different branches would help.

How do the diagrams help you visualize the branch structure?

	They help us understand how many parallel developments are happening and which changes are part of which parallel branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	all code from both branches get merged from the point they diverted. The diagram shows an easy way of understanding at point branches divereted and at what point they got merged - that is easy to figure out what changes would be part of which commit.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
